components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    NextPageUrl:
      description: URL to fetch the next page of results for a paginated API request
      type: string
    Offset:
      default: '0'
      description: Offset for paginated requests
      format: int32
      minimum: 0
      type: integer
    PageSize:
      default: '25'
      description: Number of results to fetch per page for paginated requests
      format: int32
      maximum: 100
      minimum: 1
      type: integer
    ProjectId:
      description: Unique ID for a Hex project
      format: uuid
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      type: string
    ProjectRunResponsePayload:
      additionalProperties: false
      description: Response format returned by the runProject endpoint
      properties:
        projectId:
          $ref: '#/components/schemas/ProjectId'
        runId:
          $ref: '#/components/schemas/RunId'
        runStatusUrl:
          $ref: '#/components/schemas/RunStatusUrl'
        runUrl:
          $ref: '#/components/schemas/RunUrl'
        traceId:
          $ref: '#/components/schemas/TraceId'
      required:
      - projectId
      - runId
      - runUrl
      - runStatusUrl
      - traceId
      type: object
    ProjectRunStatus:
      description: Current status of a project run
      enum:
      - PENDING
      - RUNNING
      - ERRORED
      - COMPLETED
      - KILLED
      - UNABLE_TO_ALLOCATE_KERNEL
      type: string
    ProjectRunsResponsePayload:
      additionalProperties: false
      properties:
        nextPage:
          allOf:
          - $ref: '#/components/schemas/NextPageUrl'
          nullable: true
        previousPage:
          allOf:
          - $ref: '#/components/schemas/NextPageUrl'
          nullable: true
        runs:
          description: Array of run status payloads in the same format returned by
            the `GetRunStatus` endpoint
          items:
            $ref: '#/components/schemas/ProjectStatusResponsePayload'
          type: array
        traceId:
          $ref: '#/components/schemas/TraceId'
      required:
      - runs
      - nextPage
      - previousPage
      - traceId
      type: object
    ProjectStatusResponsePayload:
      additionalProperties: false
      description: Response format returned by the getRunStatus endpoint
      properties:
        elapsedTime:
          description: Total elapsed time for the project run in milliseconds
          format: double
          nullable: true
          type: number
        endTime:
          description: UTC timestamp of when the project run finished
          format: date-time
          nullable: true
          type: string
        projectId:
          $ref: '#/components/schemas/ProjectId'
        runId:
          $ref: '#/components/schemas/RunId'
        runUrl:
          $ref: '#/components/schemas/RunUrl'
        startTime:
          description: UTC timestamp of when the project run started
          format: date-time
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ProjectRunStatus'
        traceId:
          $ref: '#/components/schemas/TraceId'
      required:
      - projectId
      - runId
      - runUrl
      - status
      - startTime
      - endTime
      - elapsedTime
      - traceId
      type: object
    RunId:
      description: Unique ID for a run of a Hex project
      format: uuid
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      type: string
    RunProjectRequestBody:
      additionalProperties: false
      description: Request body format for triggering a project run
      properties:
        dryRun:
          default: 'false'
          description: If specified, perform a dry run without actually executing
            the project.
          type: boolean
        inputParams:
          additionalProperties: {}
          description: Optional input parameter value map for this project run.
          example:
            numeric_input_1: 123
            text_input_1: Hello World
          properties: {}
          type: object
        updateCache:
          default: 'false'
          description: 'When true, this run will update the cached state of the published
            app with the latest run results.

            Additionally, any SQL cells that have caching enabled will be re-executed
            as part of this run. Note

            that this cannot be set to true if custom input parameters are provided.'
          type: boolean
      type: object
    RunStatusUrl:
      description: URL to query the status of the project run via the Hex API
      type: string
    RunUrl:
      description: URL to view the current progress of the project run in the Hex
        UI
      type: string
    TraceId:
      description: Hex trace ID to identify an API request. Provide this value to
        hex support with any API issues you encounter
      type: string
    TsoaErrorResponsePayload:
      properties:
        reason:
          type: string
        traceId:
          $ref: '#/components/schemas/TraceId'
      required:
      - traceId
      - reason
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
info:
  contact: {}
  description: API specification for the Hex External API
  license:
    name: UNLICENSED
  title: Hex API
  version: 1.0.0
openapi: 3.0.0
paths:
  /project/{projectId}/run:
    post:
      description: Trigger a run of the latest published version of a project.
      operationId: RunProject
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          $ref: '#/components/schemas/ProjectId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunProjectRequestBody'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRunResponsePayload'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsoaErrorResponsePayload'
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsoaErrorResponsePayload'
          description: ''
  /project/{projectId}/run/{runId}:
    delete:
      description: Cancel a project run.
      operationId: CancelRun
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          $ref: '#/components/schemas/ProjectId'
      - in: path
        name: runId
        required: true
        schema:
          $ref: '#/components/schemas/RunId'
      responses:
        '204':
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsoaErrorResponsePayload'
          description: ''
    get:
      description: Get the status of a project run.
      operationId: GetRunStatus
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          $ref: '#/components/schemas/ProjectId'
      - in: path
        name: runId
        required: true
        schema:
          $ref: '#/components/schemas/RunId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusResponsePayload'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsoaErrorResponsePayload'
          description: ''
  /project/{projectId}/runs:
    get:
      description: Get the status of the API-triggered runs of a project.
      operationId: GetProjectRuns
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          $ref: '#/components/schemas/ProjectId'
      - in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/Offset'
      - in: query
        name: statusFilter
        required: false
        schema:
          $ref: '#/components/schemas/ProjectRunStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRunsResponsePayload'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsoaErrorResponsePayload'
          description: ''
security:
- bearerAuth: []
servers:
- url: /api/v1
